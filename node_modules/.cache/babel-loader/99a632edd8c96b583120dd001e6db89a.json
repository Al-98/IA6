{"ast":null,"code":"var _jsxFileName = \"/Users/almutasimalhabsi/Downloads/code-ch19-main3/src/components/LoginPage.js\";\nimport React from 'react';\nimport CreateAccountDialog from './CreateAccountDialog.js';\nimport ResetPasswordDialog from './ResetPasswordDialog.js';\nimport AppMode from \"./../AppMode.js\";\n\nclass LoginPage extends React.Component {\n  constructor() {\n    super(); //Create a ref for the email input DOM element\n\n    this.handleLogin = () => {\n      //Stop spinner\n      this.setState({\n        loginBtnIcon: \"fa fa-sign-in\",\n        loginBtnLabel: \"Log In\"\n      }); //Set current user\n\n      this.props.setUserId(this.emailInputRef.current.value); //Trigger switch to FEED mode (default app landing page)\n\n      this.props.changeMode(AppMode.FEED);\n    };\n\n    this.handleLoginSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loginBtnIcon: \"fa fa-spin fa-spinner\",\n        loginBtnLabel: \"Logging In...\"\n      }); //Initiate spinner for 1 second\n\n      setTimeout(this.handleLogin, 1000);\n    };\n\n    this.handleLoginChange = () => {\n      let thisUser = this.emailInputRef.current.value;\n      let data = JSON.parse(localStorage.getItem(thisUser)); //Check username and password:\n\n      if (data == null) {\n        this.emailInputRef.current.setCustomValidity(\"No account with this email address exists. Choose 'Create an account'.\");\n        return; //Exit the function; no need to check pw validity\n      } else {\n        this.emailInputRef.current.setCustomValidity(\"\");\n      }\n\n      if (data.password != this.passwordInputRef.current.value) {\n        this.passwordInputRef.current.setCustomValidity(\"The password you entered is incorrect. Please try again or choose 'Reset your password'.\");\n      } else {\n        this.passwordInputRef.current.setCustomValidity(\"\");\n      }\n    };\n\n    this.newAccountCreated = () => {\n      this.setState({\n        newAccountCreated: true,\n        showCreateAccountDialog: false\n      });\n    };\n\n    this.cancelCreateAccount = () => {\n      this.setState({\n        showCreateAccountDialog: false\n      });\n    };\n\n    this.emailInputRef = React.createRef();\n    this.passwordInputRef = React.createRef();\n    this.state = {\n      newAccountCreated: false,\n      loginBtnIcon: \"fa fa-sign-in\",\n      loginBtnLabel: \"Log In\",\n      showCreateAccountDialog: false,\n      showResetPasswordDialog: false\n    };\n  } //Focus cursor in email input field when mounted\n\n\n  componentDidMount() {\n    this.emailInputRef.current.focus();\n  } //handleLogin -- Callback function that sets up initial app state upon login.\n\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"login-mode-div\",\n      className: \"padded-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), this.state.newAccountCreated ? React.createElement(\"p\", {\n      className: \"emphasis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"New account created! Enter credentials to log in.\") : null, React.createElement(\"form\", {\n      id: \"loginInterface\",\n      onSubmit: this.handleLoginSubmit,\n      onChange: this.handleLoginChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"emailInput\",\n      style: {\n        padding: 0,\n        fontSize: 24\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Email:\", React.createElement(\"input\", {\n      ref: this.emailInputRef,\n      className: \"form-control login-text\",\n      type: \"email\",\n      placeholder: \"Enter Email Address\",\n      id: \"emailInput\",\n      pattern: \"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,}\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"passwordInput\",\n      style: {\n        padding: 0,\n        fontSize: 24\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Password:\", React.createElement(\"input\", {\n      ref: this.passwordInputRef,\n      className: \"form-control login-text\",\n      type: \"password\",\n      placeholder: \"Enter Password\",\n      pattern: \"[A-Za-z0-9!@#$%^&*()_+\\\\-]+\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"bg-danger\",\n      id: \"feedback\",\n      style: {\n        fontSize: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn-color-theme btn btn-primary btn-block login-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      id: \"login-btn-icon\",\n      className: this.state.loginBtnIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), \"\\xA0\", this.state.loginBtnLabel), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-link login-link\",\n      onClick: () => {\n        this.setState({\n          showCreateAccountDialog: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Create an account\"), \" |\", React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-link login-link\",\n      onClick: () => {\n        this.setState({\n          showResetPasswordDialog: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Reset your password\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Version CptS 489\"))), this.state.showCreateAccountDialog ? React.createElement(CreateAccountDialog, {\n      newAccountCreated: this.newAccountCreated,\n      cancelCreateAccount: this.cancelCreateAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }) : null, this.state.showResetPasswordDialog ? React.createElement(ResetPasswordDialog, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }) : null));\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/almutasimalhabsi/Downloads/code-ch19-main3/src/components/LoginPage.js"],"names":["React","CreateAccountDialog","ResetPasswordDialog","AppMode","LoginPage","Component","constructor","handleLogin","setState","loginBtnIcon","loginBtnLabel","props","setUserId","emailInputRef","current","value","changeMode","FEED","handleLoginSubmit","event","preventDefault","setTimeout","handleLoginChange","thisUser","data","JSON","parse","localStorage","getItem","setCustomValidity","password","passwordInputRef","newAccountCreated","showCreateAccountDialog","cancelCreateAccount","createRef","state","showResetPasswordDialog","componentDidMount","focus","render","padding","fontSize"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CreateAccountDialog from './CreateAccountDialog.js';\nimport ResetPasswordDialog from './ResetPasswordDialog.js';\nimport AppMode from \"./../AppMode.js\";\n\nclass LoginPage extends React.Component {\n\nconstructor() {\n    super();\n    //Create a ref for the email input DOM element\n    this.emailInputRef = React.createRef();\n    this.passwordInputRef = React.createRef();\n    this.state = {newAccountCreated: false,\n                  loginBtnIcon: \"fa fa-sign-in\",\n                  loginBtnLabel: \"Log In\",\n                  showCreateAccountDialog: false,\n                  showResetPasswordDialog: false,\n                  };\n} \n    \n//Focus cursor in email input field when mounted\ncomponentDidMount() {\n    this.emailInputRef.current.focus();\n}  \n\n//handleLogin -- Callback function that sets up initial app state upon login.\nhandleLogin = () => {\n    //Stop spinner\n    this.setState({loginBtnIcon: \"fa fa-sign-in\",\n                loginBtnLabel: \"Log In\"});\n    //Set current user\n    this.props.setUserId(this.emailInputRef.current.value);\n    //Trigger switch to FEED mode (default app landing page)\n    this.props.changeMode(AppMode.FEED);\n}\n\n\n//handleLoginSubmit -- Called when user clicks on login button. Initiate spinner\n//for 1 second and call handleLogin to do the work.\nhandleLoginSubmit = (event) => {\n        event.preventDefault();\n        this.setState({loginBtnIcon: \"fa fa-spin fa-spinner\",\n                        loginBtnLabel: \"Logging In...\"});\n        //Initiate spinner for 1 second\n        setTimeout(this.handleLogin,1000);\n}\n\n//handleLoginChange -- Check the validity of the username (email address)\n//password entered into the login page, setting the customValidity message \n//appropriately. \nhandleLoginChange = () => {\n    let thisUser = this.emailInputRef.current.value;\n    let data = JSON.parse(localStorage.getItem(thisUser));\n    //Check username and password:\n    if (data == null) { \n        this.emailInputRef.current.setCustomValidity(\"No account with this email address exists. Choose 'Create an account'.\");\n        return; //Exit the function; no need to check pw validity\n    } else {\n        this.emailInputRef.current.setCustomValidity(\"\");\n    }\n    if (data.password != this.passwordInputRef.current.value) {\n        this.passwordInputRef.current.setCustomValidity(\"The password you entered is incorrect. Please try again or choose 'Reset your password'.\");\n    } else {\n        this.passwordInputRef.current.setCustomValidity(\"\");\n    }\n  }\n\n  //newAccountCreated -- Called by child CreateAccountDialog component when new user account\n  //successfully created. Hide the dialog and display a message inviting user to log in\n  //with new credentials.\n  newAccountCreated = () => {\n      this.setState({newAccountCreated: true,\n                     showCreateAccountDialog: false});\n  }\n\n  //cancelCreateAccount -- Called by child CreateAccountDialog componenet when user decides\n  //to cancel creation of new account by clicking the \"X\" in top-right of dialog.\n  cancelCreateAccount = () => {\n      this.setState({showCreateAccountDialog: false});\n  }\n\n  render() {\n    return(\n        <div id=\"login-mode-div\" className=\"padded-page\">\n        <center>\n            <h1 />\n            {this.state.newAccountCreated ? <p className=\"emphasis\">New account created! Enter credentials to log in.</p> : null}\n            <form id=\"loginInterface\" onSubmit={this.handleLoginSubmit} onChange={this.handleLoginChange}>\n            <label htmlFor=\"emailInput\" style={{ padding: 0, fontSize: 24 }}>\n                Email:\n                <input\n                ref={this.emailInputRef}\n                className=\"form-control login-text\"\n                type=\"email\"\n                placeholder=\"Enter Email Address\"\n                id=\"emailInput\"\n                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\n                required={true}\n                />\n            </label>\n            <p />\n            <label htmlFor=\"passwordInput\" style={{ padding: 0, fontSize: 24 }}>\n                Password:\n                <input\n                ref={this.passwordInputRef}\n                className=\"form-control login-text\"\n                type=\"password\"\n                placeholder=\"Enter Password\"\n                pattern=\"[A-Za-z0-9!@#$%^&*()_+\\-]+\"\n                required={true}\n                />\n            </label>\n            <p className=\"bg-danger\" id=\"feedback\" style={{ fontSize: 16 }} />\n            <button\n                type=\"submit\"\n                className=\"btn-color-theme btn btn-primary btn-block login-btn\">\n                <span id=\"login-btn-icon\" className={this.state.loginBtnIcon}/>\n                &nbsp;{this.state.loginBtnLabel}\n            </button>\n            <p>\n            <button type=\"button\" className=\"btn btn-link login-link\" \n                    onClick={() => {this.setState({showCreateAccountDialog: true});}}>\n                Create an account</button> | \n                <button type=\"button\" className=\"btn btn-link login-link\"\n                        onClick={() => {this.setState({showResetPasswordDialog: true});}}>\n                Reset your password</button>\n            </p>  \n            <p>\n                <i>Version CptS 489</i>\n            </p>\n            </form>\n            {this.state.showCreateAccountDialog ? \n              <CreateAccountDialog \n                newAccountCreated={this.newAccountCreated}\n                cancelCreateAccount={this.cancelCreateAccount} /> : null}\n            {this.state.showResetPasswordDialog ? <ResetPasswordDialog /> : null}\n        </center>\n        </div>\n        )\n    }\n} \n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}