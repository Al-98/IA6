{"ast":null,"code":"var _jsxFileName = \"/Users/almutasimalhabsi/Downloads/code-ch19-main3/src/components/CreateAccountDialog.js\";\nimport React from 'react';\n\nclass CreateAccountDialog extends React.Component {\n  constructor() {\n    super(); //Create a ref for the email input DOM element\n\n    this.checkAccountValidity = () => {\n      if (this.state.accountPassword != this.state.accountPasswordRepeat) {\n        //Passwords don't match\n        this.repeatPassRef.current.setCustomValidity(\"This password must match original password.\");\n      } else {\n        this.repeatPassRef.current.setCustomValidity(\"\");\n      }\n\n      let data = JSON.parse(localStorage.getItem(this.newUserRef.current.value));\n\n      if (data != null) {\n        //The user name is already taken\n        this.newUserRef.current.setCustomValidity(\"An account already exists under this email address. \" + \"Use 'Reset password' to recover the password.\");\n      } else {\n        this.newUserRef.current.setCustomValidity(\"\");\n      }\n    };\n\n    this.handleNewAccountChange = event => {\n      if (event.target.name === \"profilePic\") {\n        if (event.target.value.length == 0) {\n          //The user canceled the file selection -- set back to default\n          this.setState({\n            profilePicDataURL: \"\",\n            profilePicURL: \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\"\n          });\n        } else {\n          //The user selected a file\n          const self = this;\n          const val = event.target.value;\n          const reader = new FileReader();\n          reader.readAsDataURL(this.profilePicRef.current.files[0]);\n          reader.addEventListener(\"load\", function () {\n            self.setState({\n              profilePicURL: \"\",\n              profilePicDataURL: this.result\n            });\n          });\n        }\n      } else {\n        this.setState({\n          [event.target.name]: event.target.value\n        }, this.checkAccountValidity);\n      }\n    };\n\n    this.setDefaultDisplayName = event => {\n      if (event.target.value.length > 0 && this.state.displayName === \"\") {\n        this.setState({\n          displayName: event.target.value\n        });\n      }\n    };\n\n    this.handleCreateAccount = event => {\n      event.preventDefault(); //Initialize user account\n\n      let userData = {\n        displayName: this.state.displayName,\n        password: this.state.accountPassword,\n        profilePicFile: this.state.profilePicFile,\n        //if empty, use default\n        profilePicDataURL: this.state.profilePicDataURL,\n        securityQuestion: this.state.accountSecurityQuestion,\n        securityAnswer: this.state.accountSecurityAnswer,\n        rounds: {},\n        roundCount: 0\n      }; //Commit to local storage\n\n      localStorage.setItem(this.state.accountName, JSON.stringify(userData)); //Invite user to log in using new account\n\n      this.props.newAccountCreated();\n    };\n\n    this.newUserRef = React.createRef();\n    this.repeatPassRef = React.createRef();\n    this.profilePicRef = React.createRef();\n    this.state = {\n      accountName: \"\",\n      displayName: \"\",\n      profilePicDataURL: \"\",\n      profilePicURL: \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",\n      accountPassword: \"\",\n      accountPasswordRepeat: \"\",\n      accountSecurityQuestion: \"\",\n      accountSecurityAnswer: \"\"\n    };\n  } //checkAccountValidity -- Callback function invoked after a form element in\n  //the 'Create Account' dialog box changes and component state has been\n  //updated. We need to check whether the passwords match. If they do not, \n  //we set a custom validity message to be displayed when the user clicks the\n  //'Create Account' button. Otherwise, we reset the custom validity message\n  //to empty so that it will NOT fire when the user clicks 'Create Account'.\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"modal\",\n      role: \"dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-dialog modal-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Create New Account\"))), React.createElement(\"button\", {\n      className: \"close\",\n      onClick: this.props.cancelCreateAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"\\xD7\")), React.createElement(\"div\", {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleCreateAccount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Email:\", React.createElement(\"input\", {\n      className: \"form-control form-text form-center\",\n      name: \"accountName\",\n      type: \"email\",\n      size: \"35\",\n      placeholder: \"Enter Email Address\",\n      pattern: \"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,}\",\n      required: true,\n      ref: this.newUserRef,\n      value: this.state.accountName,\n      onChange: this.handleNewAccountChange,\n      onBlur: this.setDefaultDisplayName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Password:\", React.createElement(\"input\", {\n      className: \"form-control form-text form-center\",\n      name: \"accountPassword\",\n      type: \"password\",\n      size: \"35\",\n      placeholder: \"Enter Password\",\n      pattern: \"(?=^.{8,}$)((?=.*\\\\d)|(?=.*\\\\W+))(?![.\\\\n])(?=.*[A-Z])(?=.*[a-z]).*$\",\n      required: true,\n      value: this.state.accountPassword,\n      onChange: this.handleNewAccountChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Repeat Password:\", React.createElement(\"input\", {\n      className: \"form-control form-text form-center\",\n      name: \"accountPasswordRepeat\",\n      type: \"password\",\n      size: \"35\",\n      placeholder: \"Repeat Password\",\n      required: true,\n      ref: this.repeatPassRef,\n      value: this.state.accountPasswordRepeat,\n      onChange: this.handleNewAccountChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Display Name:\", React.createElement(\"input\", {\n      className: \"form-control form-text form-center\",\n      name: \"displayName\",\n      type: \"text\",\n      size: \"30\",\n      placeholder: \"Display Name\",\n      required: true,\n      value: this.state.displayName,\n      onChange: this.handleNewAccountChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Profile Picture:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"form-control form-text form-center\",\n      name: \"profilePic\",\n      type: \"file\",\n      accept: \"image/x-png,image/gif,image/jpeg\",\n      ref: this.profilePicRef,\n      value: this.state.profilePic,\n      onChange: this.handleNewAccountChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: this.state.profilePicURL != \"\" ? this.state.profilePicURL : this.state.profilePicDataURL,\n      height: \"60\",\n      width: \"60\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Security Question:\", React.createElement(\"textarea\", {\n      className: \"form-control form-text form-center\",\n      name: \"accountSecurityQuestion\",\n      size: \"35\",\n      placeholder: \"Security Question\",\n      rows: \"2\",\n      cols: \"35\",\n      maxLength: \"100\",\n      required: true,\n      value: this.state.accountSecurityQuestion,\n      onChange: this.handleNewAccountChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Answer to Security Question:\", React.createElement(\"textarea\", {\n      className: \"form-control form-text form-center\",\n      name: \"accountSecurityAnswer\",\n      type: \"text\",\n      placeholder: \"Answer\",\n      rows: \"2\",\n      cols: \"35\",\n      maxLength: \"100\",\n      required: true,\n      value: this.state.accountSecurityAnswer,\n      onChange: this.handleNewAccountChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      role: \"submit\",\n      className: \"btn btn-primary btn-color-theme modal-submit-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-user-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), \"\\xA0Create Account\"))))));\n  }\n\n}\n\nexport default CreateAccountDialog;","map":{"version":3,"sources":["/Users/almutasimalhabsi/Downloads/code-ch19-main3/src/components/CreateAccountDialog.js"],"names":["React","CreateAccountDialog","Component","constructor","checkAccountValidity","state","accountPassword","accountPasswordRepeat","repeatPassRef","current","setCustomValidity","data","JSON","parse","localStorage","getItem","newUserRef","value","handleNewAccountChange","event","target","name","length","setState","profilePicDataURL","profilePicURL","self","val","reader","FileReader","readAsDataURL","profilePicRef","files","addEventListener","result","setDefaultDisplayName","displayName","handleCreateAccount","preventDefault","userData","password","profilePicFile","securityQuestion","accountSecurityQuestion","securityAnswer","accountSecurityAnswer","rounds","roundCount","setItem","accountName","stringify","props","newAccountCreated","createRef","render","cancelCreateAccount","profilePic"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass CreateAccountDialog extends React.Component {\n\n    constructor() {\n        super();\n        //Create a ref for the email input DOM element\n        this.newUserRef = React.createRef();\n        this.repeatPassRef = React.createRef();\n        this.profilePicRef = React.createRef();\n        this.state = {accountName: \"\",\n                      displayName: \"\",\n                      profilePicDataURL: \"\",\n                      profilePicURL: \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",\n                      accountPassword: \"\",\n                      accountPasswordRepeat: \"\",\n                      accountSecurityQuestion: \"\",\n                      accountSecurityAnswer: \"\"};\n\n    }\n\n    //checkAccountValidity -- Callback function invoked after a form element in\n    //the 'Create Account' dialog box changes and component state has been\n    //updated. We need to check whether the passwords match. If they do not, \n    //we set a custom validity message to be displayed when the user clicks the\n    //'Create Account' button. Otherwise, we reset the custom validity message\n    //to empty so that it will NOT fire when the user clicks 'Create Account'.\n    checkAccountValidity = () => {\n        if (this.state.accountPassword != this.state.accountPasswordRepeat) {\n            //Passwords don't match\n            this.repeatPassRef.current.setCustomValidity(\n            \"This password must match original password.\");\n        } else {\n            this.repeatPassRef.current.setCustomValidity(\"\");\n        }\n        let data = JSON.parse(localStorage.getItem(this.newUserRef.current.value));\n        if (data != null) {\n            //The user name is already taken\n            this.newUserRef.current.setCustomValidity(\"An account already exists under this email address. \" +\n              \"Use 'Reset password' to recover the password.\");\n        } else {\n            this.newUserRef.current.setCustomValidity(\"\");\n        }\n    }\n\n    //handleNewAccountChange--Called when a field in a dialog box form changes.\n    handleNewAccountChange = (event) => {\n        if (event.target.name === \"profilePic\") {\n            if (event.target.value.length == 0) { //The user canceled the file selection -- set back to default\n                this.setState({profilePicDataURL: \"\",\n                profilePicURL: \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\"});\n            } else { //The user selected a file\n                const self = this;\n                const val = event.target.value;\n                const reader = new FileReader();\n                reader.readAsDataURL(this.profilePicRef.current.files[0]);\n                reader.addEventListener(\"load\",function() {\n                    self.setState({profilePicURL: \"\",\n                                   profilePicDataURL: this.result});\n                });\n            }\n        } else {\n            this.setState({[event.target.name]: event.target.value},this.checkAccountValidity);\n        }\n    } \n\n    //setDefaultDisplayName -- Triggered by onBlur() event of Email field.\n    //Sets default value of display name to value entered into Email field \n    //as a courtesy.\n    setDefaultDisplayName = (event) => {\n      if (event.target.value.length > 0 && this.state.displayName === \"\") {\n        this.setState({displayName: event.target.value});\n      }\n    }\n\n    //handleCreateAccount -- Triggered when user clicks on \"Create Account\" button.\n    //Custom data checking ensures user account under this email does not \n    //already exist and that the rest of the info is valid. We create a new  \n    // object for user, save it to localStorage and take user to app's \n    //landing page. \n    handleCreateAccount = (event) => {\n        event.preventDefault();\n        //Initialize user account\n        let userData = {\n            displayName: this.state.displayName,\n            password: this.state.accountPassword,\n            profilePicFile: this.state.profilePicFile, //if empty, use default\n            profilePicDataURL: this.state.profilePicDataURL,\n            securityQuestion: this.state.accountSecurityQuestion,\n            securityAnswer: this.state.accountSecurityAnswer,\n            rounds: {},\n            roundCount: 0\n        };\n        //Commit to local storage\n        localStorage.setItem(this.state.accountName,JSON.stringify(userData));\n        //Invite user to log in using new account\n        this.props.newAccountCreated();\n    }\n\n    render() {\n    return (\n    <div className=\"modal\" role=\"dialog\">\n        <div className=\"modal-dialog modal-lg\">\n        <div className=\"modal-content\">\n            <div className=\"modal-header\">\n            <center>\n            <h3 className=\"modal-title\"><b>Create New Account</b></h3>\n            </center>\n            <button className=\"close\" \n                onClick={this.props.cancelCreateAccount}>\n                &times;</button>\n            </div>\n            <div className=\"modal-body\">\n            <form onSubmit={this.handleCreateAccount}>\n            <label>\n                Email: \n                <input\n                className=\"form-control form-text form-center\"\n                name=\"accountName\"\n                type=\"email\"\n                size=\"35\"\n                placeholder=\"Enter Email Address\"\n                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\n                required={true}\n                ref={this.newUserRef}\n                value={this.state.accountName}\n                onChange={this.handleNewAccountChange}\n                onBlur={this.setDefaultDisplayName}\n                />\n            </label>\n            <label>\n                Password:\n                <input\n                className=\"form-control form-text form-center\"\n                name=\"accountPassword\"\n                type=\"password\"\n                size=\"35\"\n                placeholder=\"Enter Password\"\n                pattern=\n                \"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\n                required={true}\n                value={this.state.accountPassword}\n                onChange={this.handleNewAccountChange}\n                />\n            </label>\n            <label>\n                Repeat Password:\n                <input\n                className=\"form-control form-text form-center\"\n                name=\"accountPasswordRepeat\"\n                type=\"password\"\n                size=\"35\"\n                placeholder=\"Repeat Password\"\n                required={true}\n                ref={this.repeatPassRef}\n                value={this.state.accountPasswordRepeat}\n                onChange={this.handleNewAccountChange}\n                />\n            </label>\n            <label>\n                Display Name:\n                <input\n                className=\"form-control form-text form-center\"\n                name=\"displayName\"\n                type=\"text\"\n                size=\"30\"\n                placeholder=\"Display Name\"\n                required={true}\n                value={this.state.displayName}\n                onChange={this.handleNewAccountChange}\n                />\n            </label>\n            <label>\n                Profile Picture:<br/>\n                <input\n                className=\"form-control form-text form-center\"\n                name=\"profilePic\"\n                type=\"file\"\n                accept=\"image/x-png,image/gif,image/jpeg\" \n                ref={this.profilePicRef}\n                value={this.state.profilePic}\n                onChange={this.handleNewAccountChange}\n                />\n                <img src={this.state.profilePicURL != \"\" ? \n                            this.state.profilePicURL :\n                            this.state.profilePicDataURL} \n                        height=\"60\" width=\"60\" />\n            </label> \n            <label>\n                Security Question:\n                <textarea\n                className=\"form-control form-text form-center\"\n                name=\"accountSecurityQuestion\"\n                size=\"35\"\n                placeholder=\"Security Question\"\n                rows=\"2\"\n                cols=\"35\"\n                maxLength=\"100\"\n                required={true}\n                value={this.state.accountSecurityQuestion}\n                onChange={this.handleNewAccountChange}\n                />\n            </label>\n            <label>\n                Answer to Security Question:\n                <textarea\n                className=\"form-control form-text form-center\"\n                name=\"accountSecurityAnswer\"\n                type=\"text\"\n                placeholder=\"Answer\"\n                rows=\"2\"\n                cols=\"35\"\n                maxLength=\"100\"\n                required={true}\n                value={this.state.accountSecurityAnswer}\n                onChange={this.handleNewAccountChange}\n                />\n            </label>\n            <br/>\n            <button role=\"submit\" \n                className=\"btn btn-primary btn-color-theme modal-submit-btn\">\n                <span className=\"fa fa-user-plus\"></span>&nbsp;Create Account\n            </button>\n            </form>\n            </div>\n        </div>\n        </div>\n    </div>\n    );\n    }\n    }\n\nexport default CreateAccountDialog;"]},"metadata":{},"sourceType":"module"}